import matplotlib.pyplot as plt
import seaborn as sns
import numpy as np

import warnings

warnings.filterwarnings(action='ignore')

df_tips=sns.load_dataset('tips')

df_tips

df_tips.head()



#Line plots

X=np.linspace(1,20,100)
X

Y=np.exp(X)
Y

X=np.linspace(1,20,100)
Y=np.exp(X)
plt.plot(X,Y)
plt.show()

X=np.linspace(1,20,100)
Y=np.exp(X)
plt.plot(X,Y,'*')
plt.show()

X=np.linspace(1,20,100)
Y=np.exp(X)
plt.plot(X,Y,'r*')
plt.show()

X=[1,2,3,4,5,6,7,8,9,10]
Y=[2,4,6,8,10,12,14,16,18,20]
plt.plot(X,Y,'r')
plt.show()

X=[1,2,3,4,5,6,7,8,9,10]
Y=[21,44,65,81,100,121,144,116,187,240]
plt.plot(X,Y,'g*')
plt.show()


X=[1,2,3,4,5,6,7,8,9,10]
Y=np.exp(X)
plt.plot(X,Y,'r')
plt.show()

X=[1,2,3,4,5,6,7,8,9,10]
Y=np.exp(X)

Y

X=[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]
Y=np.square(X)
plt.plot(X,Y,'y*')
plt.title('SQUARE')
plt.show()

X=[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]
Y=np.sqrt(X)
plt.plot(X,Y,'r*')
plt.title('SQUAREROOT')
plt.show()

X=[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]
Ysquare=np.square(X)
Ysqrt=np.sqrt(X)
plt.plot(X,Ysquare,'r',X,Ysqrt,'b')
plt.title('lineplot')
plt.show()

X=[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]
Ysquare=np.square(X)
Ysqrt=np.sqrt(X)
plt.subplot(1,2,1)
plt.plot(X,Ysquare,'r')
plt.subplot(1,2,2)
plt.plot(X,Ysqrt,'b')
plt.title('lineplot')
plt.show()

X=[1,2,3,4,5,6,7,8,9,10,11,12,13,14,15,16,17,18,19,20]
Ysquare=np.square(X)
Ysqrt=np.sqrt(X)
plt.plot(X,Ysqrt,'r',X,Ysquare,'b')
plt.title('lineplot')
plt.show()

X=np.linspace(1,20,100)
Ysquare=np.square(X)
Ysqrt=np.sqrt(X)
plt.plot(X,Ysquare,'g',X,Ysqrt,'m')
plt.title('lineplot')
plt.show()

X=[16,25,36,49,64,81,100]
Ysquare=np.square(X)
Ysqrt=np.sqrt(X)
plt.plot(X,Ysquare,'r',X,Ysqrt,'b')
plt.title('lineplot')
plt.show()

#Scatter plots

df_tips.head()

X=df_tips.head()['total_bill']
Y=df_tips.head()['tip']
plt.figure(figsize=(5,3))
sns.set(rc={'figure.figsize'})
plt.scatter(X,Y)
plt.title('scatterplot')
plt.xlabel('totalbill')
plt.ylabel('tips')
plt.show()

import pandas as pd
dff=pd.DataFrame({'height':[4.5,5.2,5.11,6.1,7.2,8.4],'weight':[50,65,72,84,95,102]})
dff

X=dff['height']
Y=dff['weight']
plt.scatter(X,Y)
plt.title('height and weight')
plt.xlabel('height')
plt.ylabel('weight')
plt.show()

X=dff['height']
Y=dff['weight']
plt.figure(figsize=(8,6))
plt.plot(X,Y,'g*')
plt.title('height and weight')
plt.xlabel('height')
plt.ylabel('weight')
plt.show()

df_tips

#barplot

df_tips['smoker'].value_counts()

set(df_tips['smoker'])

df_tips.smoker.value_counts()

df_tips.smoker.value_counts().plot(kind='bar',rot=0)
plt.show()


plt.figure(figsize=(10,7))
df_tips.smoker.value_counts().plot(kind='bar',rot=0,color='green')
plt.text(x =-0.05,y=df_tips.smoker.value_counts()[0]+1,s=df_tips.smoker.value_counts()[0])
plt.text(x =0.98,y=df_tips.smoker.value_counts()[1]+2,s=df_tips.smoker.value_counts()[1])
plt.title('barplot')
plt.xlabel('smoker')
plt.ylabel('count')
plt.show()

df_tips.smoker.value_counts().plot(kind='bar',rot=0,color='yellow')
plt.text(x=-0.05,y=152,s=df_tips.smoker.value_counts()[0])
plt.text(x=0.98,y=95,s=df_tips.smoker.value_counts()[1])
plt.title('barplot')
plt.xlabel('smoker')
plt.ylabel('count')
plt.show()

plt.figure(figsize=(8,5))
df_tips.smoker.value_counts().plot(kind='bar',rot=0,color='yellow')
plt.text(x=-0.05,y=152,s='151')
plt.text(x=0.98,y=95,s='93')
plt.title('barplot')
plt.xlabel('smoker')
plt.ylabel('count')
plt.show()

#pie charts
df_tips['day'].value_counts()

plt.pie(df_tips.day.value_counts(),autopct='%.1f%%',radius=1.2,labels=['sat','sun','thurs','fri'])
plt.show()

plt.pie(df_tips.sex.value_counts(),autopct='%.1f%%',radius=1.2,labels=['male','female'])
plt.show()

plt.pie(df_tips.day.value_counts(),autopct='%.1f%%',radius=1.2,labels=['sat','sun','thurs','fri'],explode=[0,0,0,0.5])
plt.show()

plt.pie(df_tips.day.value_counts(),autopct='%.1f%%',radius=1.2,labels=['sat','sun','thurs','fri'],explode=[0,0,0,5])
plt.show()

plt.pie(df_tips.day.value_counts(),autopct='%.1f%%',radius=1.2,labels=['sat','sun','thurs','fri'],explode=[0,0,0.5,0.5])
plt.show()

#donut chart

plt.pie(df_tips.day.value_counts(),autopct='%.1f%%',radius=1.2,labels=['sat','sun','thurs','fri'])
circle=plt.Circle((0,0),radius=0.5,color='white')
plot=plt.gcf()
plot.gca().add_artist(circle)
plt.show()

#histogram


plt.hist(df_tips['tip'],bins=5)
plt.title("distribution of tip amount")
plt.xlabel('tip')
plt.ylabel('Frequency')
plt.show()

#area plot

df_tips['day'].value_counts().sort_index().plot.area()
plt.show()

df_tips['day'].value_counts().sort_index(ascending=False).plot.area()
plt.show()

plt.boxplot(df_tips['total_bill'])

plt.text(x=1.1,y=df_tips['total_bill'].min(),s='min')
plt.text(x=1.1,y=df_tips['total_bill'].quantile(0.25),s='Q1')
plt.text(x=1.1,y=df_tips['total_bill'].median(),s='median(Q2)')
plt.text(x=1.1,y=df_tips['total_bill'].quantile(0.75),s='Q3')
plt.text(x=1.1,y=df_tips['total_bill'].max(),s='max')
         
         
plt.annotate('outliers',xy=(0.98,45),xytext=(0.7,44),arrowprops=dict(facecolor='black',arrowstyle='simple'))
plt.title('Box plot of total bill amount')
plt.ylabel('Total bill')
plt.show()

sns.boxplot(df_tips['total_bill'])


sns.boxplot(x='day',y='total_bill',data=df_tips)


